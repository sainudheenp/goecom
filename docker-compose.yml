version: '3.8'

services:
  db:
    image: postgres:15-alpine
    container_name: ecom_db
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: ecom
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5

  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: ecom_app
    ports:
      - "8080:8080"
    environment:
      PORT: 8080
      ENV: development
      DATABASE_URL: postgres://postgres:postgres@db:5432/ecom?sslmode=disable
      JWT_SECRET: your_super_secret_jwt_key_change_in_production_min_32_chars
      JWT_EXPIRES_HOURS: 24
      BCRYPT_COST: 10
      LOG_LEVEL: info
      CORS_ORIGINS: http://localhost:3000,http://localhost:8080
      RATE_LIMIT_REQUESTS: 100
      RATE_LIMIT_WINDOW_MINUTES: 15
    depends_on:
      db:
        condition: service_healthy
    restart: unless-stopped

  swagger-ui:
    image: swaggerapi/swagger-ui
    container_name: ecom_swagger
    ports:
      - "8081:8080"
    environment:
      SWAGGER_JSON: /openapi.yaml
    volumes:
      - ./openapi.yaml:/openapi.yaml

volumes:
  postgres_data:
